cmake_minimum_required(VERSION 3.1)
project(dl_data)

set(CMAKE_MODULE_PATH ${Project_SOURCE_DIR}/cmake)

set(DRIVENET_WEIGHTS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../sensing/itri_drivenet/drivenet/data/yolo)
set(PARKNET_WEIGHTS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../sensing/itri_parknet/weights)
set(OPENROADNET_WEIGHTS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../sensing/itri_openroadnet/openroadnet)
set(CAMERA_UTILS_DATA_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../sensing/camera_utils/data)
set(CAMERA_GRABBER_DATA_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../sensing/camera_grabber/src/CameraGrabber)
set(ASSETS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/assets)

function(download_file)
    cmake_parse_arguments(OPT "" "URL;DESTINATION;MD5" "" ${ARGN})

    if(NOT EXISTS "${OPT_DESTINATION}")
        set(need_download TRUE)
        message(STATUS "File ${OPT_DESTINATION} doesn't exist")
    else()
        file(MD5 "${OPT_DESTINATION}" file_md5)
        if(NOT "${file_md5}" STREQUAL "${OPT_MD5}")
            set(need_download TRUE)
            message(STATUS "File ${OPT_DESTINATION} is out of date")
        endif()
    endif()

    if(${need_download})
        message(STATUS "Downloading ${OPT_DESTINATION} ...")
        file(DOWNLOAD "${OPT_URL}" "${OPT_DESTINATION}")
        file(MD5 "${OPT_DESTINATION}" file_md5)
        if(NOT "${file_md5}" STREQUAL "${OPT_MD5}")
            message(WARNING "Expected hash of ${OPT_DESTINATION} is ${OPT_MD5}, "
                "but the actual hash is ${file_md5}")
        endif()
    else()
        message(STATUS "File ${OPT_DESTINATION} is up to date")
    endif()
endfunction()

include(cmake/drivenet_weights.cmake)
include(cmake/camera_grabber.cmake)
include(cmake/openroadnet_weights.cmake)
include(cmake/parknet_weights.cmake)
include(cmake/camera_fov120_distance.cmake)
include(cmake/libtensorflow_gpu.cmake)
