<!-- -*- mode: XML -*- -->
<!-- 
Lidar List:
* LidarFrontRight:     Ouster64, 192.168.0.221
* LidarFrontLeft:      Ouster64, 192.168.0.230     
* LidarFrontTop(base): Ouster64, 192.168.0.224
-->

<launch>
<!-- ******** Ros Parameter For Stitching Do Not Edit By Hand ******** -->
<rosparam param="LidarFrontLeft_Fine_Param">[0.323, 1.169, -1.892, 0.028, 0.005, 1.785]</rosparam>
<rosparam param="LidarFrontRight_Fine_Param">[0.391, -1.062, -1.874, -0.022, -0.005, -1.831]</rosparam>
<rosparam param="LidarRearLeft_Fine_Param">[0, 0, 0, 0, 0, 0]</rosparam>
<rosparam param="LidarRearRight_Fine_Param">[0, 0, 0, 0, 0, 0]</rosparam>

<!-- Ros Parameter Backup 
<rosparam param="LidarFrontLeft_Fine_Param">[0.582, -0.867, -1.899, -0.209, 0.209, 0.22]</rosparam>
<rosparam param="LidarFrontRight_Fine_Param">[-1.536, -0.863, -1.409, -0.22, 0.259, 2.94]</rosparam>
<rosparam param="LidarRearLeft_Fine_Param">[-6.36, 1.1, -2.24, 3.14, -3.08, -1.08]</rosparam>
<rosparam param="LidarRearRight_Fine_Param">[-6.37, -1.23, -2.28, 0.03, -0.07, -2.03]</rosparam>
-->

<!-- Global arg ************************************************************ -->
    <arg name="use_filter" default="0" />
	<arg name="hardware_enable" default="1" />>
	<arg name="mps" default="1" />
	<arg name="mode" default="0" />
    <arg name="rpm_set" default="1200.0"/>
    <arg name="set_group_1" value="/LidarFrontTop"/>
    <arg name="set_group_2" value="/LidarFrontLeft"/>
    <arg name="set_group_3" value="/LidarFrontRight"/>
	

	<rosparam param="debug_output">true</rosparam>
	<rosparam param="LaunchFileName">b1.launch</rosparam>
<!-- Filter **************************************************************** -->
	<rosparam param="use_filter" if="$(eval arg('use_filter') != 1)">false</rosparam>
	<rosparam param="use_filter" if="$(eval arg('use_filter') == 1)">true</rosparam>

<!-- tf2 ******************************************************************* -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="tf_baselink_to_os1sensor"  args="0 0 0 -3.1415926 0 0 /base_link /os1_sensor" />
	<node pkg="tf2_ros" type="static_transform_publisher" name="tf_baselink_to_lidar"  args="0 0 0 0 0 0 /base_link /lidar" />

<!-- MPS ******************************************************************* -->
	<group if="$(eval arg('mps') == 1)">
		<node pkg="scripts" type="mps.sh" name="mps" output="screen"/>
	</group>
<!-- Shape estimation ******************************************************************* -->
<rosparam param="use_shape_estimation">true</rosparam>â€‹
<!-- Mode Switch ************************************************************ -->
	<group if="$(eval arg('mode') == 0)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_b1" 			name="lidars_grabber_b1" 			output="screen" cwd="node" respawn="true"  />
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_b1" 		name="lidars_preprocessing_b1" 		output="screen" cwd="node"  />
		<!-- <node pkg="lidar_squseg_inference"   type="lidar_squseg_inference"	name="lidar_squseg_inference"   	output="screen" cwd="node" args="b1 X 0 1" /> -->
		<node pkg="lidar_squseg_v2_inference"   type="lidar_squseg_v2_inference"	name="lidar_squseg_v2_inference"   	output="screen" cwd="node" args="b1 X 0 1" /> 
		<node pkg="output_results_by_dbscan" 	type="output_results_by_dbscan_b1"  name="output_results_by_dbscan_b1"  output="screen" cwd="node" respawn="true"  />
	</group>

	<group if="$(eval arg('mode') == 1)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_b1" 			name="lidars_grabber_b1" 			output="screen" cwd="node" args="-D"  />
	</group>

	<group if="$(eval arg('mode') == 2)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_b1" 			name="lidars_grabber_b1" 			output="screen" cwd="node"  />
	</group>

	<group if="$(eval arg('mode') == 3)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_b1" 		 	name="lidars_grabber_b1" 	  		output="screen" cwd="node"  />
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_b1" 		name="lidars_preprocessing_b1" 		output="screen" cwd="node"  />
	</group>

	<group if="$(eval arg('mode') == 4)">
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_b1" 		name="lidars_preprocessing_b1" 		output="screen" cwd="node"  />
		<node pkg="lidar_squseg_v2_inference"      type="lidar_squseg_v2_inference"	 	 	name="lidar_squseg_v2_inference"    			output="screen" cwd="node" args="b1 X 0 1" />
		<node pkg="output_results_by_dbscan" 	type="output_results_by_dbscan_b1"  name="output_results_by_dbscan_b1"  output="screen" cwd="node" respawn="true"  />
	</group>

<!-- Lidar Driver ********************************************************************************** -->
<!-- ************ Front-Top: Ouster64 ************ -->
    <group ns="$(arg set_group_1)" if="$(eval arg('hardware_enable') != 0)">
        <arg name="os1_hostname" default="192.168.0.223" doc="hostname or IP in dotted decimal form of the sensor"/>
        <arg name="os1_udp_dest" default="192.168.0.1" doc="hostname or IP where the sensor will send data packets"/>
        <arg name="os1_lidar_port" default="7523" doc="port to which the sensor should send lidar data"/>
        <arg name="os1_imu_port" default="7503" doc="port to which the sensor should send imu data"/>
        <arg name="replay" default="false" doc="do not connect to a sensor; expect /os1_node/{lidar,imu}_packets from replay"/>
        <arg name="lidar_mode" default="1024x20" doc="resolution and rate: either 512x10, 512x20, 1024x10, 1024x20, or 2048x10"/>
        <arg name="metadata" default="" doc="override default metadata file for replays"/>
        <arg name="frame_id" default="lidar"/>

        <node pkg="ouster_ros" name="os1_node" type="os1_node" output="screen" respawn="true">
            <param name="~/lidar_mode" type="string" value="$(arg lidar_mode)"/>
            <param name="~/replay" value="$(arg replay)"/>
            <param name="~/os1_hostname" value="$(arg os1_hostname)"/>
            <param name="~/os1_udp_dest" value="$(arg os1_udp_dest)"/>
            <param name="~/os1_lidar_port" value="$(arg os1_lidar_port)"/>
            <param name="~/os1_imu_port" value="$(arg os1_imu_port)"/>
            <param name="~/metadata" value="$(arg metadata)"/>
        </node>

        <node pkg="ouster_ros" type="os1_cloud_node" name="os1_cloud_node" output="screen" respawn="true">
            <remap from="$(arg set_group_1)/os1_cloud_node/os1_config" to="$(arg set_group_1)/os1_node/os1_config"/>
            <remap from="$(arg set_group_1)/os1_cloud_node/lidar_packets" to="$(arg set_group_1)/os1_node/lidar_packets"/>
			<remap from="$(arg set_group_1)/os1_cloud_node/imu_packets" to="$(arg set_group_1)/os1_node/imu_packets"/>

            <remap from="$(arg set_group_1)/os1_cloud_node/points" to="$(arg set_group_1)/Raw"/>
			<remap from="$(arg set_group_1)/os1_cloud_node/imu" to="$(arg set_group_1)/imu"/>
            <param name="~/frame_id" value="$(arg frame_id)"/>
        </node>
    </group>

<!-- ************ Front-Left: Ouster64 ************ -->
    <group ns="$(arg set_group_2)" if="$(eval arg('hardware_enable') != 0)">
        <arg name="os1_hostname" default="192.168.0.221" doc="hostname or IP in dotted decimal form of the sensor"/>
        <arg name="os1_udp_dest" default="192.168.0.1" doc="hostname or IP where the sensor will send data packets"/>
        <arg name="os1_lidar_port" default="7521" doc="port to which the sensor should send lidar data"/>
        <arg name="os1_imu_port" default="7501" doc="port to which the sensor should send imu data"/>
        <arg name="replay" default="false" doc="do not connect to a sensor; expect /os1_node/{lidar,imu}_packets from replay"/>
        <arg name="lidar_mode" default="1024x20" doc="resolution and rate: either 512x10, 512x20, 1024x10, 1024x20, or 2048x10"/>
        <arg name="metadata" default="" doc="override default metadata file for replays"/>
        <arg name="frame_id" default="lidar"/>

        <node pkg="ouster_ros" name="os1_node" type="os1_node" output="screen" respawn="true">
            <param name="~/lidar_mode" type="string" value="$(arg lidar_mode)"/>
            <param name="~/replay" value="$(arg replay)"/>
            <param name="~/os1_hostname" value="$(arg os1_hostname)"/>
            <param name="~/os1_udp_dest" value="$(arg os1_udp_dest)"/>
            <param name="~/os1_lidar_port" value="$(arg os1_lidar_port)"/>
            <param name="~/os1_imu_port" value="$(arg os1_imu_port)"/>
            <param name="~/metadata" value="$(arg metadata)"/>
        </node>

        <node pkg="ouster_ros" type="os1_cloud_node" name="os1_cloud_node" output="screen" respawn="true">
            <remap from="$(arg set_group_2)/os1_cloud_node/os1_config" to="$(arg set_group_2)/os1_node/os1_config"/>
            <remap from="$(arg set_group_2)/os1_cloud_node/lidar_packets" to="$(arg set_group_2)/os1_node/lidar_packets"/>
			<remap from="$(arg set_group_2)/os1_cloud_node/imu_packets" to="$(arg set_group_2)/os1_node/imu_packets"/>

            <remap from="$(arg set_group_2)/os1_cloud_node/points" to="$(arg set_group_2)/Raw"/>
			<remap from="$(arg set_group_2)/os1_cloud_node/imu" to="$(arg set_group_2)/imu"/>
            <param name="~/frame_id" value="$(arg frame_id)"/>
        </node>
    </group>

<!-- ************ Front-Right: Ouster64 ************ -->
    <group ns="$(arg set_group_3)" if="$(eval arg('hardware_enable') != 0)">
        <arg name="os1_hostname" default="192.168.0.230" doc="hostname or IP in dotted decimal form of the sensor"/>
        <arg name="os1_udp_dest" default="192.168.0.1" doc="hostname or IP where the sensor will send data packets"/>
        <arg name="os1_lidar_port" default="7530" doc="port to which the sensor should send lidar data"/>
        <arg name="os1_imu_port" default="7533" doc="port to which the sensor should send imu data"/>
        <arg name="replay" default="false" doc="do not connect to a sensor; expect /os1_node/{lidar,imu}_packets from replay"/>
        <arg name="lidar_mode" default="1024x20" doc="resolution and rate: either 512x10, 512x20, 1024x10, 1024x20, or 2048x10"/>
        <arg name="metadata" default="" doc="override default metadata file for replays"/>
        <arg name="frame_id" default="lidar"/>

        <node pkg="ouster_ros" name="os1_node" type="os1_node" output="screen" respawn="true">
            <param name="~/lidar_mode" type="string" value="$(arg lidar_mode)"/>
            <param name="~/replay" value="$(arg replay)"/>
            <param name="~/os1_hostname" value="$(arg os1_hostname)"/>
            <param name="~/os1_udp_dest" value="$(arg os1_udp_dest)"/>
            <param name="~/os1_lidar_port" value="$(arg os1_lidar_port)"/>
            <param name="~/os1_imu_port" value="$(arg os1_imu_port)"/>
            <param name="~/metadata" value="$(arg metadata)"/>
        </node>

        <node pkg="ouster_ros" type="os1_cloud_node" name="os1_cloud_node" output="screen" respawn="true">
            <remap from="$(arg set_group_3)/os1_cloud_node/os1_config" to="$(arg set_group_3)/os1_node/os1_config"/>
            <remap from="$(arg set_group_3)/os1_cloud_node/lidar_packets" to="$(arg set_group_3)/os1_node/lidar_packets"/>
			<remap from="$(arg set_group_3)/os1_cloud_node/imu_packets" to="$(arg set_group_3)/os1_node/imu_packets"/>

            <remap from="$(arg set_group_3)/os1_cloud_node/points" to="$(arg set_group_3)/Raw"/>
			<remap from="$(arg set_group_3)/os1_cloud_node/imu" to="$(arg set_group_3)/imu"/>
            <param name="~/frame_id" value="$(arg frame_id)"/>
        </node>
    </group>



</launch>










