<!-- -*- mode: XML -*- -->
<launch>
<!-- ******** Ros Parameter For Stitching Do Not Edit By Hand ******** -->
<rosparam param="LidarLeft_Fine_Param">[-1.92, 1.12, -2.5, -0.01, -0.04, 1.59]</rosparam>
<rosparam param="LidarRight_Fine_Param">[-1.92, -1.28, -2.52, 0.02, -0.02, -1.57]</rosparam>
<rosparam param="LidarFront_Fine_Param">[1.11, 0.07, -2.62, 0.01, -0.03, 0.79]</rosparam>
<!-- Ros Parameter Backup  
<rosparam param="LidarLeft_Fine_Param">[-1.97678, 1.21, -2.39211, 3.12174, -3.11984, -1.59068]</rosparam>
<rosparam param="LidarRight_Fine_Param">[-1.91, -1.26, -2.41, 0.04, 0, -1.59]</rosparam>
<rosparam param="LidarFront_Fine_Param">[1.11, 0.07, -2.62, 0.01, -0.03, 0.79]</rosparam>
-->
<!-- Global arg ************************************************************ -->
	<arg name="mode" default="0" />
	<arg name="rpm_16" default="1200.0"/>
	<arg name="rpm_32" default="1200.0"/>
	<rosparam param="LaunchFileName">hino2.launch</rosparam>

<!-- STATIC TF2 ************************************************************ -->
<!-- static_transform_publisher x y z yaw pitch roll frame_id child_frame_id -->
<node pkg="tf2_ros" type="static_transform_publisher" name="Lidar_tf2"  args="0.4 0 3.42 0 0.04 0 /base_link  /lidar" />

<!-- *********************************************************************** -->
	<group if="$(eval arg('mode') == 0)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_hino" 		 name="lidars_grabber_hino" 	  cwd="node" respawn="true" output="screen" />
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_hino" name="lidars_preprocessing_hino" cwd="node" respawn="true" output="screen" />
		<node pkg="lidar_squseg_inference"      type="squeezeseg_inference"	 	 name="squseg_inference"    output="screen" cwd="node" args="hino1 X 0 1" />
		<node pkg="output_results_by_dbscan" 	type="output_results_by_dbscan_hino"  name="output_results_by_dbscan_hino"  cwd="node" respawn="true" output="screen" />
	</group>

	<group if="$(eval arg('mode') == 1)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_hino" 		 name="lidars_grabber_hino" 	  cwd="node" args="-D" output="screen" />
		<node pkg="display" 					type="display_hino" 			 name="display_hino" 			  output="screen" />
	</group>

	<group if="$(eval arg('mode') == 2)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_hino" 		 name="lidars_grabber_hino" 	  cwd="node" output="screen" />
	</group>

	<group if="$(eval arg('mode') == 3)">
		<node pkg="lidars_grabber" 				type="lidars_grabber_hino" 		 name="lidars_grabber_hino" 	  cwd="node" output="screen" />
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_hino" name="lidars_preprocessing_hino" cwd="node" output="screen" />
	</group>
	
	<group if="$(eval arg('mode') == 4)">
		<node pkg="lidars_preprocessing" 		type="lidars_preprocessing_hino" name="lidars_preprocessing_hino" cwd="node" />
		<node pkg="lidar_squseg_inference"      type="squeezeseg_inference"	 	 name="squseg_inference"    output="screen" cwd="node" args="hino1 X 0 1" />
		<node pkg="output_results_by_dbscan" 	type="output_results_by_dbscan_hino"  name="output_results_by_dbscan_hino"  output="screen" cwd="node" respawn="true"  />
	</group>

	<!-- Only Velodyne Driver -->
	<group if="$(eval arg('mode') == 5)"></group>
	

	<!-- *********************************************************************** -->
	<group ns="LidarLeft" if="$(eval arg('mode') != 3 and arg('mode') != 4)">

	<!-- declare arguments with default values -->
	<arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
  	<arg name="device_ip" default="192.168.1.221" />
	<arg name="frame_id" default="lidar_left" />
 	<arg name="manager" default="$(arg frame_id)_nodelet_manager" />
  	<arg name="max_range" default="60.0" />
  	<arg name="min_range" default="0.4" />
  	<arg name="pcap" default="" />
	<arg name="port" default="2221" />
	<arg name="read_fast" default="false" />
	<arg name="read_once" default="false" />
	<arg name="repeat_delay" default="0.0" />
	<arg name="rpm" default="$(arg rpm_16)" />
	<arg name="gps_time" default="false" />
	<arg name="cut_angle" default="-0.01" />
	<arg name="laserscan_ring" default="-1" />
	<arg name="laserscan_resolution" default="0.007" />
	<arg name="topic_name" default="Raw" />
	<remap from="velodyne_points" to="$(arg topic_name)" />

	<!-- start nodelet manager and driver nodelets -->
	<include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
		<arg name="device_ip" value="$(arg device_ip)"/>
		<arg name="frame_id" value="$(arg frame_id)"/>
	    	<arg name="manager" value="$(arg manager)" />
	    	<arg name="model" value="VLP16"/>
	    	<arg name="pcap" value="$(arg pcap)"/>
	    	<arg name="port" value="$(arg port)"/>
	    	<arg name="read_fast" value="$(arg read_fast)"/>
	    	<arg name="read_once" value="$(arg read_once)"/>
	    	<arg name="repeat_delay" value="$(arg repeat_delay)"/>
	    	<arg name="rpm" value="$(arg rpm)"/>
	    	<arg name="gps_time" value="$(arg gps_time)"/>
	    	<arg name="cut_angle" value="$(arg cut_angle)"/>
	  </include>

	  <!-- start cloud nodelet -->
	  <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
	    	<arg name="calibration" value="$(arg calibration)"/>
	    	<arg name="manager" value="$(arg manager)" />
	    	<arg name="max_range" value="$(arg max_range)"/>
	    	<arg name="min_range" value="$(arg min_range)"/>
	  </include>

	  <!-- start laserscan nodelet -->
	  <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
		<arg name="manager" value="$(arg manager)" />
	   	<arg name="ring" value="$(arg laserscan_ring)"/>
	  	<arg name="resolution" value="$(arg laserscan_resolution)"/>
	  </include>
	</group>

	<!-- *********************************************************************** -->
	<group ns="LidarRight" if="$(eval arg('mode') != 3 and arg('mode') != 4)">
		<!-- declare arguments with default values -->
		<arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
		<arg name="device_ip" default="192.168.1.222" />
		<arg name="frame_id" default="lidar_right" />
		<arg name="manager" default="$(arg frame_id)_nodelet_manager" />
		<arg name="max_range" default="60.0" />
		<arg name="min_range" default="0.4" />
		<arg name="pcap" default="" />
		<arg name="port" default="2222" />
		<arg name="read_fast" default="false" />
		<arg name="read_once" default="false" />
		<arg name="repeat_delay" default="0.0" />
		<arg name="rpm" default="$(arg rpm_16)" />
		<arg name="gps_time" default="false" />
		<arg name="cut_angle" default="-0.01" />
		<arg name="laserscan_ring" default="-1" />
		<arg name="laserscan_resolution" default="0.007" />
		<arg name="topic_name" default="Raw" />
		<remap from="velodyne_points" to="$(arg topic_name)" />

		<!-- start nodelet manager and driver nodelets -->
		<include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
			<arg name="device_ip" value="$(arg device_ip)"/>
			<arg name="frame_id" value="$(arg frame_id)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="model" value="VLP16"/>
			<arg name="pcap" value="$(arg pcap)"/>
			<arg name="port" value="$(arg port)"/>
			<arg name="read_fast" value="$(arg read_fast)"/>
			<arg name="read_once" value="$(arg read_once)"/>
			<arg name="repeat_delay" value="$(arg repeat_delay)"/>
			<arg name="rpm" value="$(arg rpm)"/>
			<arg name="gps_time" value="$(arg gps_time)"/>
			<arg name="cut_angle" value="$(arg cut_angle)"/>
		</include>

		<!-- start cloud nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
			<arg name="calibration" value="$(arg calibration)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="max_range" value="$(arg max_range)"/>
			<arg name="min_range" value="$(arg min_range)"/>
		</include>

		<!-- start laserscan nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
			<arg name="manager" value="$(arg manager)" />
			<arg name="ring" value="$(arg laserscan_ring)"/>
			<arg name="resolution" value="$(arg laserscan_resolution)"/>
		</include>
	</group>

	<!-- *********************************************************************** -->
	<group ns="LidarFront" if="$(eval arg('mode') != 3 and arg('mode') != 4)">
		<arg name="calibration" default="$(find velodyne_pointcloud)/params/VeloView-VLP-32C.yaml"/>
		<arg name="device_ip" default="192.168.1.220" />
		<arg name="frame_id" default="lidar_front" />
		<arg name="manager" default="$(arg frame_id)_nodelet_manager" />
		<arg name="max_range" default="60.0" />
		<arg name="min_range" default="0.4" />
		<arg name="pcap" default="" />
		<arg name="port" default="2220" />
		<arg name="read_fast" default="false" />
		<arg name="read_once" default="false" />
		<arg name="repeat_delay" default="0.0" />
		<arg name="rpm" default="$(arg rpm_32)" />
		<arg name="gps_time" default="false" />
		<arg name="laserscan_ring" default="-1" />
		<arg name="laserscan_resolution" default="0.007" />
		<arg name="topic_name" default="Raw" />
		<remap from="velodyne_points" to="$(arg topic_name)" />

		<!-- start nodelet manager and driver nodelets -->
		<include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
			<arg name="device_ip" value="$(arg device_ip)"/>
			<arg name="frame_id" value="$(arg frame_id)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="model" value="32C"/>
			<arg name="pcap" value="$(arg pcap)"/>
			<arg name="port" value="$(arg port)"/>
			<arg name="read_fast" value="$(arg read_fast)"/>
			<arg name="read_once" value="$(arg read_once)"/>
			<arg name="repeat_delay" value="$(arg repeat_delay)"/>
			<arg name="rpm" value="$(arg rpm)"/>
			<arg name="gps_time" value="$(arg gps_time)"/>
		</include>

		<!-- start cloud nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
			<arg name="calibration" value="$(arg calibration)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="max_range" value="$(arg max_range)"/>
			<arg name="min_range" value="$(arg min_range)"/>
		</include>

		<!-- start laserscan nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
			<arg name="manager" value="$(arg manager)" />
			<arg name="ring" value="$(arg laserscan_ring)"/>
			<arg name="resolution" value="$(arg laserscan_resolution)"/>
		</include>
	</group>

	<!-- *********************************************************************** -->
	<group ns="LidarTop" if="$(eval arg('mode') != 3 and arg('mode') != 4)">
		<arg name="calibration" default="$(find velodyne_pointcloud)/params/VeloView-VLP-32C.yaml"/>
		<arg name="device_ip" default="192.168.1.223" />
		<arg name="frame_id" default="lidar_top" />
		<arg name="manager" default="$(arg frame_id)_nodelet_manager" />
		<arg name="max_range" default="60.0" />
		<arg name="min_range" default="0.4" />
		<arg name="pcap" default="" />
		<arg name="port" default="2223" />
		<arg name="read_fast" default="false" />
		<arg name="read_once" default="false" />
		<arg name="repeat_delay" default="0.0" />
		<arg name="rpm" default="$(arg rpm_32)" />
		<arg name="gps_time" default="false" />
		<arg name="laserscan_ring" default="-1" />
		<arg name="laserscan_resolution" default="0.007" />
		<arg name="topic_name" default="Raw" />
		<remap from="velodyne_points" to="$(arg topic_name)" />

		<!-- start nodelet manager and driver nodelets -->
		<include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
			<arg name="device_ip" value="$(arg device_ip)"/>
			<arg name="frame_id" value="$(arg frame_id)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="model" value="32C"/>
			<arg name="pcap" value="$(arg pcap)"/>
			<arg name="port" value="$(arg port)"/>
			<arg name="read_fast" value="$(arg read_fast)"/>
			<arg name="read_once" value="$(arg read_once)"/>
			<arg name="repeat_delay" value="$(arg repeat_delay)"/>
			<arg name="rpm" value="$(arg rpm)"/>
			<arg name="gps_time" value="$(arg gps_time)"/>
		</include>

		<!-- start cloud nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
			<arg name="calibration" value="$(arg calibration)"/>
			<arg name="manager" value="$(arg manager)" />
			<arg name="max_range" value="$(arg max_range)"/>
			<arg name="min_range" value="$(arg min_range)"/>
		</include>

		<!-- start laserscan nodelet -->
		<include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
			<arg name="manager" value="$(arg manager)" />
			<arg name="ring" value="$(arg laserscan_ring)"/>
			<arg name="resolution" value="$(arg laserscan_resolution)"/>
		</include>
	</group>

</launch>


